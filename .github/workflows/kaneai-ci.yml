name: Run HyperExecute Job Manually

on:
  workflow_dispatch:
    inputs:
      test_run_id:
        description: 'Test Run ID'
        required: true
        type: string
      region:
        description: 'Region (e.g. eastus, centralindia)'
        required: true
        type: string
      title:
        description: 'Unique Build Title'
        required: true
        type: string

jobs:
  run-hyperexecute:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger HyperExecute Job
        id: trigger
        run: |
          response=$(curl --silent --location 'https://test-manager-api.lambdatest.com/api/atm/v1/hyperexecute' \
            --header 'Content-Type: application/json' \
            --header 'Authorization: Basic ${{ secrets.LT_AUTH_BASE64 }}' \
            --data '{
              "test_run_id": "${{ github.event.inputs.test_run_id }}",
              "concurrency": 1,
              "title": "${{ github.event.inputs.title }}",
              "region": "${{ github.event.inputs.region }}",
              "tunnel": "tunnel-name",
              "accessibility": false,
              "replaced_url": [
                {
                  "pattern_url": "TEST_URL_1",
                  "replacement_url": "REPLACED_TEST_URL_1"
                },
                {
                  "pattern_url": "TEST_URL_2",
                  "replacement_url": "REPLACED_TEST_URL_2"
                }
              ]
            }')
          
          echo "Response: $response"
          job_id=$(echo "$response" | jq -r '.job_id')
          echo "job_id=$job_id" >> $GITHUB_OUTPUT

      - name: Wait for 5 minutes
        run: |
          echo "Waiting for 5 minutes before fetching job status..."
          sleep 300

      - name: Fetch and Print Job Status
        run: |
          job_id=${{ steps.trigger.outputs.job_id }}
          echo "Fetching status for job ID: $job_id"

          status_response=$(curl -s -X GET "https://api.hyperexecute.cloud/v2.0/job/$job_id" \
            -H "accept: application/json")
          
          echo "Status Response: $status_response"
          
          status=$(echo "$status_response" | jq -r '.status')
          echo "Job Status: $status"
